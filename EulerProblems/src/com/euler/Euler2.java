/*
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */



package com.euler;

public class Euler2 {
	
	
	public static long fib(int n) {
        if (n <= 1) return n;
        else return fib(n-1) + fib(n-2);
    }
	
	public static long evenfib(){
		long sum = 0;
		long N = 4000000;
		int i =0;
        while(fib(i)<N){
           if(fib(i)%2 == 0){
        	   sum = sum + fib(i);
           }
           i++;
        }
        return sum;
	}
           
    

	

    public static void main(String[] args) {
    	System.out.println(evenfib());
        
     }
    
    }
